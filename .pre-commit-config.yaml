# Pre-commit hooks for IGDB Game Recommendation System
# Run: pre-commit install
# Run: pre-commit run --all-files

repos:
  # Security and secrets scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: '\.secrets\.baseline$'

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']  # Block files larger than 1MB
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: debug-statements
      - id: check-docstring-first

  # Python code quality
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3

  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: ['--max-line-length=88', '--extend-ignore=E203,W503']

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-requests, types-PyYAML]

  # Security scanning
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-r', '.', '-f', 'json', '-o', 'bandit-report.json']
        exclude: '^tests/'

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # Terraform formatting
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.83.3
    hooks:
      - id: terraform_fmt
      - id: terraform_validate
      - id: terraform_tflint
        args:
          - --args=--only=terraform_deprecated_interpolation
          - --args=--only=terraform_deprecated_index
          - --args=--only=terraform_unused_declarations
          - --args=--only=terraform_comment_syntax
          - --args=--only=terraform_documented_outputs
          - --args=--only=terraform_documented_variables
          - --args=--only=terraform_typed_variables
          - --args=--only=terraform_module_pinned_source
          - --args=--only=terraform_naming_convention
          - --args=--only=terraform_required_version
          - --args=--only=terraform_required_providers
          - --args=--only=terraform_standard_module_structure
          - --args=--only=terraform_workspace_remote

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.37.0
    hooks:
      - id: markdownlint
        args: ['--fix', '--disable', 'MD013']  # Disable line length check

  # Custom hooks for project-specific checks
  - repo: local
    hooks:
      - id: check-env-files
        name: Check for .env files
        entry: bash -c 'if find . -name "*.env*" -not -path "./.git/*" | grep -q .; then echo "Found .env files! Remove them before committing."; exit 1; fi'
        language: system
        files: '\.env'

      - id: check-credentials
        name: Check for credential files
        entry: bash -c 'if find . -name "*.key" -o -name "*.pem" -o -name "*.p12" -o -name "*.pfx" | grep -q .; then echo "Found credential files! Remove them before committing."; exit 1; fi'
        language: system
        files: '\.(key|pem|p12|pfx)$'

      - id: check-large-data-files
        name: Check for large data files
        entry: bash -c 'if find . -name "*.csv" -o -name "*.json" -o -name "*.parquet" -o -name "*.pickle" | xargs ls -la | awk "{if(\$5 > 1000000) print \$9}" | grep -q .; then echo "Found large data files! Use .gitignore or git-lfs."; exit 1; fi'
        language: system
        files: '\.(csv|json|parquet|pickle)$'
