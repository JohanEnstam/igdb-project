# Continuous Deployment Pipeline
# Deploys to GCP Cloud Run on main branch

name: CD Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  PROJECT_ID: igdb-recommendation-system
  REGION: europe-west1
  REGISTRY: gcr.io

jobs:
  # Deploy to staging
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event.inputs.environment == 'staging'
    environment: staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker

      - name: Deploy Data Ingestion Service
        run: |
          gcloud run deploy igdb-ingestion-staging \
            --image ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/igdb-ingestion:latest \
            --platform managed \
            --region ${{ env.REGION }} \
            --set-secrets IGDB_CLIENT_ID=IGDB_CLIENT_ID:latest,IGDB_CLIENT_SECRET=IGDB_CLIENT_SECRET:latest \
            --set-env-vars ENVIRONMENT=staging \
            --allow-unauthenticated \
            --memory 1Gi \
            --cpu 1 \
            --max-instances 10

      - name: Deploy Data Processing Service
        run: |
          gcloud run deploy igdb-processing-staging \
            --image ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/igdb-processing:latest \
            --platform managed \
            --region ${{ env.REGION }} \
            --set-env-vars ENVIRONMENT=staging \
            --allow-unauthenticated \
            --memory 2Gi \
            --cpu 2 \
            --max-instances 5

      - name: Deploy ML Training Service
        run: |
          gcloud run deploy igdb-training-staging \
            --image ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/igdb-training:latest \
            --platform managed \
            --region ${{ env.REGION }} \
            --set-env-vars ENVIRONMENT=staging \
            --allow-unauthenticated \
            --memory 4Gi \
            --cpu 4 \
            --max-instances 3

      - name: Run integration tests
        run: |
          # Test staging deployment
          echo "Testing staging deployment..."
          # Add integration tests here
          echo "âœ… Staging deployment successful"

  # Deploy to production
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.event.inputs.environment == 'production'
    environment: production
    needs: deploy-staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker

      - name: Deploy Data Ingestion Service
        run: |
          gcloud run deploy igdb-ingestion \
            --image ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/igdb-ingestion:latest \
            --platform managed \
            --region ${{ env.REGION }} \
            --set-secrets IGDB_CLIENT_ID=IGDB_CLIENT_ID:latest,IGDB_CLIENT_SECRET=IGDB_CLIENT_SECRET:latest \
            --set-env-vars ENVIRONMENT=production \
            --allow-unauthenticated \
            --memory 2Gi \
            --cpu 2 \
            --max-instances 20

      - name: Deploy Data Processing Service
        run: |
          gcloud run deploy igdb-processing \
            --image ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/igdb-processing:latest \
            --platform managed \
            --region ${{ env.REGION }} \
            --set-env-vars ENVIRONMENT=production \
            --allow-unauthenticated \
            --memory 4Gi \
            --cpu 4 \
            --max-instances 10

      - name: Deploy ML Training Service
        run: |
          gcloud run deploy igdb-training \
            --image ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/igdb-training:latest \
            --platform managed \
            --region ${{ env.REGION }} \
            --set-env-vars ENVIRONMENT=production \
            --allow-unauthenticated \
            --memory 8Gi \
            --cpu 8 \
            --max-instances 5

      - name: Run production tests
        run: |
          # Test production deployment
          echo "Testing production deployment..."
          # Add production tests here
          echo "âœ… Production deployment successful"

      - name: Notify deployment success
        run: |
          echo "ðŸš€ Production deployment completed successfully!"
          echo "Services deployed:"
          echo "- igdb-ingestion: https://igdb-ingestion-xxx.run.app"
          echo "- igdb-processing: https://igdb-processing-xxx.run.app"
          echo "- igdb-training: https://igdb-training-xxx.run.app"
